// <auto-generated />
using System;
using Futebol.Dados;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Futebol.Migrations
{
    [DbContext(typeof(FutebolContext))]
    partial class FutebolContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Futebol.Models.Arbitragem", b =>
                {
                    b.Property<int>("jogoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("numCartAm")
                        .HasColumnType("integer");

                    b.Property<int>("numCartVer")
                        .HasColumnType("integer");

                    b.Property<int>("numFaltas")
                        .HasColumnType("integer");

                    b.Property<int>("numImpedimentos")
                        .HasColumnType("integer");

                    b.HasKey("jogoId");

                    b.ToTable("Arbitragem");
                });

            modelBuilder.Entity("Futebol.Models.Competicao", b =>
                {
                    b.Property<int>("timeId")
                        .HasColumnType("integer");

                    b.Property<int>("jogoId")
                        .HasColumnType("integer");

                    b.Property<string>("ganhador")
                        .HasColumnType("text");

                    b.Property<int>("jogos")
                        .HasColumnType("integer");

                    b.Property<double>("premiacao")
                        .HasColumnType("double precision");

                    b.Property<string>("time")
                        .HasColumnType("text");

                    b.HasKey("timeId", "jogoId");

                    b.ToTable("Competicao");
                });

            modelBuilder.Entity("Futebol.Models.Jogador", b =>
                {
                    b.Property<int>("timeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("TimecompeticaoId")
                        .HasColumnType("integer");

                    b.Property<string>("nome")
                        .HasColumnType("text");

                    b.Property<int>("numCamisa")
                        .HasColumnType("integer");

                    b.Property<string>("posicao")
                        .HasColumnType("text");

                    b.HasKey("timeId");

                    b.HasIndex("TimecompeticaoId");

                    b.ToTable("Jogadores");
                });

            modelBuilder.Entity("Futebol.Models.Jogo", b =>
                {
                    b.Property<int>("arbitragemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Arbitragem")
                        .HasColumnType("text");

                    b.Property<int?>("CompeticaojogoId")
                        .HasColumnType("integer");

                    b.Property<int?>("CompeticaotimeId")
                        .HasColumnType("integer");

                    b.Property<int>("numGols")
                        .HasColumnType("integer");

                    b.Property<string>("resultado")
                        .HasColumnType("text");

                    b.Property<bool>("substituicao")
                        .HasColumnType("boolean");

                    b.Property<string>("times")
                        .HasColumnType("text");

                    b.HasKey("arbitragemId");

                    b.HasIndex("CompeticaotimeId", "CompeticaojogoId");

                    b.ToTable("Jogo");
                });

            modelBuilder.Entity("Futebol.Models.Time", b =>
                {
                    b.Property<int>("competicaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CompeticaojogoId")
                        .HasColumnType("integer");

                    b.Property<int>("CompeticaotimeId")
                        .HasColumnType("integer");

                    b.Property<double>("dataFund")
                        .HasColumnType("double precision");

                    b.Property<string>("nome")
                        .HasColumnType("text");

                    b.HasKey("competicaoId");

                    b.HasIndex("CompeticaotimeId", "CompeticaojogoId");

                    b.ToTable("Time");
                });

            modelBuilder.Entity("Futebol.Models.Jogador", b =>
                {
                    b.HasOne("Futebol.Models.Time", "Time")
                        .WithMany("Jogadores")
                        .HasForeignKey("TimecompeticaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Time");
                });

            modelBuilder.Entity("Futebol.Models.Jogo", b =>
                {
                    b.HasOne("Futebol.Models.Competicao", null)
                        .WithMany("Jogo")
                        .HasForeignKey("CompeticaotimeId", "CompeticaojogoId");
                });

            modelBuilder.Entity("Futebol.Models.Time", b =>
                {
                    b.HasOne("Futebol.Models.Competicao", "Competicao")
                        .WithMany("Times")
                        .HasForeignKey("CompeticaotimeId", "CompeticaojogoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Competicao");
                });

            modelBuilder.Entity("Futebol.Models.Competicao", b =>
                {
                    b.Navigation("Jogo");

                    b.Navigation("Times");
                });

            modelBuilder.Entity("Futebol.Models.Time", b =>
                {
                    b.Navigation("Jogadores");
                });
#pragma warning restore 612, 618
        }
    }
}
